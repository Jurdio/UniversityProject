{
  "themes": [
    {
      "title": "Архітектура обчислювальної системи. Класифікація комп’ютерів",
      "subthemes": [
        {
          "title": "Архітектура фон-Неймана",
          "content": "Архітекту́ра фон Неймана (англ. Von Neumann architecture) — архітектура електронних обчислювальних машин, основною відмінністю якої від інших подібних архітектур є спільне зберігання даних та машинних команд в комірках однієї й тієї ж пам'яті, що унеможливлює їх розрізнення за способом представлення або кодування. Названа так на честь відомого математика та теоретика обчислювальної техніки Джона фон Неймана, та по сьогодні залишається домінуючою схемою організації ЕОМ загального призначення."
        },
        {
          "title": "Гарвардська архітектура",
          "content": "Методи оцінки продуктивності обчислювальних систем. У міру розширення використання комп’ютерів при обробленні трансакцій у сфері бізнесу все більш важливою стає можливість порівняння систем між собою. З цією метою в 1988 році була створена Рада з оцінки продуктивності обробки трансакцій (TPC – англ. Transaction Processing Performance Council) основним завданням якої, є точне визначення тестових пакетів для оцінки систем оброблення трансакцій і баз даних, а також для розповсюдження об’єктивних даних, в промисловості.\nУ комп’ютерній індустрії термін трансакція (transaction) може означати майже будь-який вид взаємодії або обміну інформацією. Найбільш характерними прикладами систем обробки трансакцій є системи управління обліком, системи резервування квитків і банківські системи.\nОцінка ефективності обчислювальних систем на спеціально підготовлених для цих цілей завданнях бенчмарках (англ. benchmark) або оцінене тестування спочатку мало мету дати прогноз щодо можливостей досліджуваної системи при рішенні класів завдань. У міру накопичення бенчмарків, досвіду їх використання і результатів аналізу отриманих даних стало зрозуміло, що бенчмарки, як би їх не критикували за обмеженістю і неадекватністю, в достатньому на практиці ступені фіксують характер і основні особливості вирішуваних задач і забезпечують необхідною інформацією користувачів і розробників обчислювальних систем.\nПродуктивність центрального процессора залежить від трьох параметрів:  такту (або частоти) синхронізації, середньої кількості тактів на команду,  кількості виконуваних команд.\nЗмінити жоден з вказаних параметрів ізольовано від іншого неможливо, оскільки базові технології, використовувані для зміни кожного з цих параметрів, взаємозв’язані: \nчастота синхронізації визначається технологією апаратних засобів і функціональною організацією процесора; \nсередня кількість тактів на команду залежить від функціональної організації і архітектури системи команд;\nкількість виконуваних у програмі команд визначається архітектурою системи команд і технологією компіляторів. \nОснову для порівняння різних типів комп’ютерів між собою дають стандартні методики вимірювання продуктивності. В процесі розвитку обчислювальної техніки з’явилося декілька таких стандартних методик. Вони дозволяють розробникам і користувачам здійснювати вибір між альтернативами на основі кількісних показників, що дає можливість постійного прогресу в даній області.\nОдиницею вимірювання продуктивності комп’ютера є час: комп’ютер, що виконує той же обсяг роботи за менший час є швидшим. Час виконання будь-якої програми вимірюється в секундах. Часто продуктивність вимірюється як швидкість появи деякого числа подій за секунду, так що менший час має на увазі більшу продуктивність.\nПроте залежно від того, що обчислюється, час може бути визначений різними способами. Найбільш простий спосіб визначення часу називається астрономічним часом, часом відповіді (англ. response time), часом виконання (англ. execution time) або минулим часом (англ. elapsed time). Це затримка виконання завдання, що включає буквально все: роботу процесора, звернення до диска, звернення до пам’яті, введення/виведення і накладні витрати операційної системи. Проте при роботі в мультипрограмному режимі під час очікування введення/виведення для однієї програми, процесор може виконувати іншу програму, і система не обов’язково мінімізуватиме час виконання даної конкретної програми.\nДля вимірювання часу роботи процесора на даній програмі використовується спеціальний параметр – час центрального процесора – ЦП (англ. CPU time), який не включає час очікування введення/виведення або час виконання іншої програми. Очевидно, що час відповіді, що спостерігається користувачем, є повним часом виконання програми, а не часом ЦП. Час ЦП може далі ділитися на час, витрачений ЦП безпосередньо на виконання програми користувача і званим користувацьким часом ЦП, і час ЦП, витрачений операційною системою на виконання завдань програмою, і зване системним часом ЦП.\nУ більшості сучасних процесорів швидкість протікання процесів взаємодії внутрішніх функціональних пристроїв визначається не природними затримками в цих пристроях, а задається єдиною системою синхросигналів, що виробляються деяким генератором тактових імпульсів, як правило, що працює з постійною швидкістю. Дискретні часові події називаються тактами синхронізації (англ. clock ticks), просто тактами (англ. ticks), періодами синхронізації (англ. clock periods), циклами (англ. cycles) або циклами синхронізації (англ. clock cycles). Розробники комп’ютерів зазвичай говорять про період синхронізації, який визначається або своєю тривалістю (наприклад, 1 наносекунда, або частотою (наприклад, 1 Ггц). Тривалість періоду синхронізації є величина, зворотна до частоти синхронізації.\nТаким чином, час ЦП для деякої програми може бути виражений двома способами: кількістю тактів синхронізації для даної програми, помноженим на тривалість такту синхронізації, або кількістю тактів синхронізації для даної програми, діленим на частоту синхронізації.\nВажливою характеристикою, що часто публікується в звітах про процесори, є середня кількість тактів синхронізації на одну команду – CPI (англ. clock cycles per instruction). При відомій кількості виконуваних команд в програмі цей параметр дозволяє швидко оцінити час ЦП для даної програми.\nТаким чином, продуктивність ЦП залежить від трьох параметрів: такту (або частоти) синхронізації, середньої кількості тактів на команду і кількості виконуваних команд. Неможливо змінити жоден з вказаних параметрів ізольовано від іншого, оскільки базові технології, використовувані для зміни кожного з цих параметрів, взаємозв’язані: частота синхронізації визначається технологією апаратних засобів і функціональною організацією процесора; середня кількість тактів на команду залежить від функціональної організації і архітектури системи команд; а кількість виконуваних в програмі команд визначається архітектурою системи команд і технологією компіляторів. Коли порівнюються дві машини, необхідно розглядати всі три компоненти, щоб зрозуміти відносну продуктивність.\nУ процесі пошуку стандартної одиниці вимірювання продуктивності комп’ютерів було прийнято декілька популярних одиниць вимірювання. Насправді єдиною відповідною і надійною одиницею вимірювання продуктивності є час виконання реальних програм, і всі пропоновані заміни цього часу як одиниці вимірювання або заміни реальних програм як об’єкти вимірювання на синтетичні програми тільки вводять в оману.\nМIPS. Однією з альтернативних одиниць вимірювання продуктивності процесора (за відношенням до часу виконання) є MIPS – (мільйон команд в секунду, англ. million insructions per second). Є декілька різних варіантів інтерпретації визначення MIPS.\nУ загальному випадку MIPS є швидкість операцій в одиницю часу, тобто для будь-якої даної програми MIPS є просто відношення кількості команд в програмі до часу її виконання. Таким чином, продуктивність може бути визначена як зворотна до часу виконання величина, причому швидші машини при цьому матимуть вищий рейтинг MIPS.\nПозитивними сторонами MIPS є те, що цю характеристику легко зрозуміти, особливо користувачеві –швидша машина характеризується більшим числом MIPS, що відповідає нашим інтуїтивним уявленням. Проте використання MIPS як метрики для порівняння натрапляє на три проблеми. По-перше, MIPS залежить від набору команд процесора, що утрудняє порівняння за MIPS комп’ютерів, що мають різні системи команд. По-друге, MIPS навіть на одному і тому ж комп’ютері змінюється від програми до програми. По-третє, MIPS може змінюватися за відношенням до продуктивності в протилежну сторону, наприклад для машин, у склад яких входить співпроцесор для обробки даних із плаваючою точкою.\nMFLOPS. (англ. Floating point Operations per Second). Вимірювання продуктивності комп’ютерів при вирішенні науково-технічних завдань, в яких істотно використовується арифметика з плаваючою точкою, завжди викликало особливий інтерес. Саме для таких обчислень вперше постало питання про вимірювання продуктивності, а за досягнутими показниками часто робилися висновки про загальний рівень розробок комп’ютерів. Зазвичай для науково-технічних завдань продуктивність процесора оцінюється в MFLOPS (мільйонах елементарних арифметичних операцій над числами з плаваючою точкою, виконаних в секунду) – позасистемна одиниця, використовувана для виміру продуктивності комп’ютерів, показує, скільки операцій з плаваючою точкою в секунду виконує дана обчислювальна система.\n"
        },
        {
          "title": "Гібридні модифікації з архітектурою фон - Неймана",
          "content": "Текст для Гібридні модифікації з архітектурою фон - Неймана"
        }
      ]
    },
    {
      "title": "Архітектура системи команд",
      "subthemes": [
        {
          "title": "Конвеєрна архітектура виконання команд.",
          "content": "Текст для Конвеєрна архітектура виконання команд."
        },
        {
          "title": "Паралельна архітектура.",
          "content": "Текст для Паралельна архітектура."
        },
        {
          "title": "Закон Амдала.",
          "content": "Текст для Закон Амдала."
        }
      ]
    }
  ]
}
